import pandas as pd
import numpy as np
import torch
import dgl
import importlib

class RadGraphs():
    def __init__(self,ent,rel,src,dst):
        super(RadGraphs,self).__init__()
        self.path = ent
        self.relpath = rel
        self.entitities = np.load(self.path,allow_pickle=True)
        self.relations = np.load(self.relpath,allow_pickle=True)
        self.src = src
        self.dst = dst
        

    def __getitem__(self, item):

        g=dgl.graph((self.src,self.dst))
        print(torch.tensor(self.entitities[item]).shape)
        g.ndata['attr']=torch.tensor(self.entitities[item])
        print(torch.tensor(self.relations[item]).shape)
        g.edata['edge_attr']=torch.tensor(self.relations[item])

        return (g,torch.tensor(item))
    def __len__(self):
        return len(self.entitities)

def main():
    print("hello")
    ent = "/u/home/mohammed/Graphormer/examples/customized_dataset/Entities.npy"
    rel = "/u/home/mohammed/Graphormer/examples/customized_dataset/Relations.npy"
    print("hello")
    src=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 5, 7, 8, 1, 10, 12, 9, 14, 1, 15, 33, 1, 18, 27, 1, 25, 30, 1, 34, 20, 16, 1, 1, 31, 32, 1, 22, 29, 1, 2, 2, 2, 2, 2, 2, 2, 2, 10, 2, 2, 14, 2, 15, 2, 2, 2, 2, 2, 2, 2, 2, 2, 20, 16, 2, 2, 2, 2, 2, 22, 2, 2, 3, 3, 3, 3, 7, 8, 3, 10, 3, 3, 14, 3, 15, 3, 3, 3, 3, 3, 3, 3, 3, 3, 20, 16, 3, 3, 3, 3, 3, 22, 3, 3, 4, 4, 4, 7, 8, 4, 10, 4, 4, 14, 4, 15, 4, 4, 4, 27, 4, 4, 4, 4, 4, 20, 16, 4, 4, 4, 4, 4, 22, 4, 4, 6, 5, 7, 8, 6, 10, 12, 9, 14, 6, 15, 6, 6, 6, 27, 6, 25, 30, 6, 6, 20, 16, 6, 6, 6, 32, 6, 22, 29, 6, 5, 7, 8, 5, 10, 12, 5, 14, 5, 15, 5, 5, 5, 27, 5, 25, 30, 5, 5, 20, 16, 5, 5, 5, 32, 5, 22, 29, 5, 7, 8, 7, 10, 7, 7, 14, 7, 15, 7, 7, 7, 7, 7, 7, 7, 7, 7, 20, 16, 7, 7, 7, 7, 7, 22, 7, 7, 8, 8, 10, 8, 8, 14, 8, 15, 8, 8, 8, 8, 8, 8, 8, 8, 8, 20, 16, 8, 8, 8, 8, 8, 22, 8, 8, 11, 10, 12, 9, 14, 11, 15, 33, 23, 18, 27, 11, 25, 30, 19, 34, 20, 16, 26, 11, 31, 32, 11, 22, 29, 11, 10, 10, 10, 10, 10, 15, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 16, 10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 14, 12, 15, 12, 12, 12, 27, 12, 25, 30, 12, 12, 20, 16, 12, 12, 12, 32, 12, 22, 29, 12, 9, 14, 9, 15, 9, 9, 9, 27, 9, 25, 30, 9, 9, 20, 16, 9, 9, 9, 32, 9, 22, 29, 9, 14, 14, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 16, 14, 14, 14, 14, 14, 22, 14, 14, 13, 15, 33, 23, 18, 27, 13, 25, 30, 19, 34, 20, 16, 26, 13, 31, 32, 13, 22, 29, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 33, 33, 33, 27, 33, 25, 30, 33, 33, 20, 16, 33, 33, 33, 32, 33, 22, 29, 33, 23, 18, 27, 23, 25, 30, 19, 34, 20, 16, 26, 23, 31, 32, 23, 22, 29, 23, 18, 27, 18, 25, 30, 18, 18, 20, 16, 18, 18, 18, 32, 18, 22, 29, 18, 27, 27, 27, 27, 27, 27, 20, 16, 27, 27, 27, 27, 27, 22, 27, 27, 28, 25, 30, 19, 34, 20, 16, 26, 21, 31, 32, 28, 22, 29, 28, 25, 25, 25, 25, 20, 16, 25, 25, 25, 25, 25, 22, 25, 25, 30, 30, 30, 20, 16, 30, 30, 30, 30, 30, 22, 29, 30, 19, 34, 20, 16, 19, 19, 31, 32, 19, 22, 29, 19, 34, 20, 16, 34, 34, 34, 32, 34, 22, 29, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 16, 16, 16, 16, 16, 16, 16, 26, 26, 31, 32, 26, 22, 29, 26, 21, 31, 32, 21, 22, 29, 21, 31, 32, 31, 22, 29, 31, 32, 32, 22, 29, 32, 24, 22, 29, 24, 22, 22, 22, 29, 29, 17]
    dst=[0, 1, 2, 3, 4, 6, 5, 7, 8, 11, 10, 12, 9, 14, 13, 15, 33, 23, 18, 27, 28, 25, 30, 19, 34, 20, 16, 26, 21, 31, 32, 24, 22, 29, 17, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 13, 1, 1, 23, 1, 1, 28, 1, 1, 19, 1, 1, 1, 26, 21, 1, 1, 24, 1, 1, 17, 2, 3, 4, 6, 5, 7, 8, 11, 2, 12, 9, 2, 13, 2, 33, 23, 18, 27, 28, 25, 30, 19, 34, 2, 2, 26, 21, 31, 32, 24, 2, 29, 17, 3, 4, 6, 5, 3, 3, 11, 3, 12, 9, 3, 13, 3, 33, 23, 18, 27, 28, 25, 30, 19, 34, 3, 3, 26, 21, 31, 32, 24, 3, 29, 17, 4, 6, 5, 4, 4, 11, 4, 12, 9, 4, 13, 4, 33, 23, 18, 4, 28, 25, 30, 19, 34, 4, 4, 26, 21, 31, 32, 24, 4, 29, 17, 6, 6, 6, 6, 11, 6, 6, 6, 6, 13, 6, 33, 23, 18, 6, 28, 6, 6, 19, 34, 6, 6, 26, 21, 31, 6, 24, 6, 6, 17, 5, 5, 5, 11, 5, 5, 9, 5, 13, 5, 33, 23, 18, 5, 28, 5, 5, 19, 34, 5, 5, 26, 21, 31, 5, 24, 5, 5, 17, 7, 7, 11, 7, 12, 9, 7, 13, 7, 33, 23, 18, 27, 28, 25, 30, 19, 34, 7, 7, 26, 21, 31, 32, 24, 7, 29, 17, 8, 11, 8, 12, 9, 8, 13, 8, 33, 23, 18, 27, 28, 25, 30, 19, 34, 8, 8, 26, 21, 31, 32, 24, 8, 29, 17, 11, 11, 11, 11, 11, 13, 11, 11, 11, 11, 11, 28, 11, 11, 11, 11, 11, 11, 11, 21, 11, 11, 24, 11, 11, 17, 10, 12, 9, 14, 13, 10, 33, 23, 18, 27, 28, 25, 30, 19, 34, 10, 10, 26, 21, 31, 32, 24, 22, 29, 17, 12, 9, 12, 13, 12, 33, 23, 18, 12, 28, 12, 12, 19, 34, 12, 12, 26, 21, 31, 12, 24, 12, 12, 17, 9, 9, 13, 9, 33, 23, 18, 9, 28, 9, 9, 19, 34, 9, 9, 26, 21, 31, 9, 24, 9, 9, 17, 14, 13, 14, 33, 23, 18, 27, 28, 25, 30, 19, 34, 14, 14, 26, 21, 31, 32, 24, 14, 29, 17, 13, 13, 13, 13, 13, 13, 28, 13, 13, 13, 13, 13, 13, 13, 21, 13, 13, 24, 13, 13, 17, 15, 33, 23, 18, 27, 28, 25, 30, 19, 34, 20, 16, 26, 21, 31, 32, 24, 22, 29, 17, 33, 23, 18, 33, 28, 33, 33, 19, 34, 33, 33, 26, 21, 31, 33, 24, 33, 33, 17, 23, 23, 23, 28, 23, 23, 23, 23, 23, 23, 23, 21, 23, 23, 24, 23, 23, 17, 18, 18, 28, 18, 18, 19, 34, 18, 18, 26, 21, 31, 18, 24, 18, 18, 17, 27, 28, 25, 30, 19, 34, 27, 27, 26, 21, 31, 32, 24, 27, 29, 17, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 24, 28, 28, 17, 25, 30, 19, 34, 25, 25, 26, 21, 31, 32, 24, 25, 29, 17, 30, 19, 34, 30, 30, 26, 21, 31, 32, 24, 30, 30, 17, 19, 19, 19, 19, 26, 21, 19, 19, 24, 19, 19, 17, 34, 34, 34, 26, 21, 31, 34, 24, 34, 34, 17, 20, 16, 26, 21, 31, 32, 24, 22, 29, 17, 16, 26, 21, 31, 32, 24, 22, 29, 17, 26, 21, 26, 26, 24, 26, 26, 17, 21, 21, 21, 24, 21, 21, 17, 31, 31, 24, 31, 31, 17, 32, 24, 32, 32, 17, 24, 24, 24, 17, 22, 29, 17, 29, 17, 17]
    src = torch.tensor(src)
    dst = torch.tensor(dst)
    dataset=RadGraphs(ent,rel,src,dst)
    for label,graph in dataset:
        print(label,graph)
        
if __name__ == '__main__':
    main()